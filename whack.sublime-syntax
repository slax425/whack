%YAML 1.2
---
name: Whack
file_extensions:
  - w
scope: source.whack
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.whack
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '//'
      scope: punctuation.definition.comment.whack
      push: line_comment

    # Keywords
    - match: '\b(true|false|using|match|default|type|await|async|func|new|sizeof|alignof|append|len|cast|let|mut|where|select|if|else|for|in|while|return|co_return|delete|yield|break|continue|unreachable|defer|chan|atomic|class|enum|struct|operator|interface|extern|export|use|as|module|OPTIONS|bool|int|uint|int64|short|uint64|char|int128|void|half|float|double|auto|nullptr|this|main|__ctor|__dtor|noinline|inline|mustinline|noreturn)\b'
      scope: keyword.control.whack

    # Numbers
    - match: '\b(-)?[0-9]+([.][0-9]*[f]?)?\b'
      scope: constant.numeric.whack

  double_quoted_string:
    - meta_scope: string.quoted.double.whack
    - match: '\\.'
      scope: constant.character.escape.whack
    - match: '"'
      scope: punctuation.definition.string.end.whack
      pop: true

  line_comment:
    - meta_scope: comment.line.whack
    - match: $
      pop: true
